'''
https://www.acmicpc.net/problem/13335

문제
다리의 길이 w는 2, 다리의 최대하중 L은 10,
 다리를 건너려는 트럭이 트럭의 무게가 [7, 4, 5, 6]인 순서대로 다리를 오른쪽에서 왼쪽으로 건넌다고 하자. 
1,2초 트럭7
  3초 트럭 4
  4초 트럭 4,5
  5초 트럭 5
  6초 트럭 6
  7초 트럭 6
  8초 fin
 이 경우 모든 트럭이 다리를 건너는 최단시간은 아래의 그림에서 보는 것과 같이 8 이다.




다리의 길이와 다리의 최대하중, 그리고 다리를 건너려는 트럭들의 무게가 순서대로 주어졌을 때,
 모든 트럭이 다리를 건너는 최단시간을 구하는 프로그램을 작성하라.

입력
입력 데이터는 표준입력을 사용한다. 입력은 두 줄로 이루어진다.
 입력의 첫 번째 줄에는 세 개의 정수 n (1 ≤ n ≤ 1,000) , w (1 ≤ w ≤ 100) and L (10 ≤ L ≤ 1,000)이 주어지는데, n은 다리를 건너는 트럭의 수, w는 다리의 길이, 그리고 L은 다리의 최대하중을 나타낸다. 입력의 두 번째 줄에는 n개의 정수 a1, a2, ⋯ , an (1 ≤ ai ≤ 10)가 주어지는데, ai는 i번째 트럭의 무게를 나타낸다.

출력
출력은 표준출력을 사용한다. 모든 트럭들이 다리를 건너는 최단시간을 출력하라.

예제 입력 2 
1 100 100
10
예제 출력 2 
101
예제 입력 3 
10 100 100
10 10 10 10 10 10 10 10 10 10
예제 출력 3 
110
'''
#입력 : 트럭개수:n, 다리길이: w, 최대하중 :l
import sys
input = sys.stdin.readline

n, w, L = map(int, input().split())
a = list(map(int, input().split()))  # 트럭 무게 리스트

cross = [0] * n  # cross[i]: i번째 트럭이 다리에 올라간 시간
cross[0] = 1
sum_weight = a[0]
idx = 0  # 다리에 올라가 있는 트럭 중 가장 앞에 있는 트럭의 번호

for i in range(1, n):
    # 다리에 올라갈 수 없는 경우(트럭 수 초과 or 무게 초과) 앞 트럭 내리기
    while i - idx + 1 > w or sum_weight + a[i] > L:
        sum_weight -= a[idx]
        idx += 1
    sum_weight += a[i]
    if idx == 0:
        cross[i] = cross[i-1] + 1
    else:
        cross[i] = max(cross[i-1] + 1, cross[idx-1] + w)

print(cross[n-1] + w)
